# ST: 0
# examples
printf "7 3\n1 3 6\n" > %i  # greedy is wrong here
printf "4 3\n1 2 4\n" > %i
printf "3 2\n1 3\n" > %i
printf "8 4\n1 3 5 7\n" > %i  # kills leftright, answer >= 2, n even
printf "5 2\n1 4\n" > %i  # kills leftright, n odd
printf "10 4\n4 5 9 10\n" > %i  # kills incorrect leverage v2
printf "14 6\n1 2 3 5 6 8\n" > %i  # n even, k even, output >= 2, greedy wrong
printf "17 8\n9 11 12 13 14 15 16 17\n" > %i  # smallest test with output >= 3
# ST: 40
# 2^n or n^6
printf "1 1\n1\n" > %i
printf "2 1\n2\n" > %i
printf "5 3\n1 2 3\n" > %i
printf "5 3\n1 4 5\n" > %i
printf "6 3\n1 3 6\n" > %i
printf "6 2\n2 5\n" > %i
gen/gen_simple -n=19 -K=4 > %i
gen/gen_simple -n=19 -K=13 > %i
gen/gen_simple -n=20 -K=5 > %i
gen/gen_simple -n=20 -K=12 > %i
gen/gen_wnx -n=19 -K=4 -wn=2 > %i
gen/gen_simple -n=16 -K=6 16 > %i  # kills solutions that think leverage is an integer when n even
gen/gen_simple -n=20 -K=8 78 > %i  # leverage rounding v2
gen/gen_prefix -n=19 -K=9 > %i
gen/gen_prefix -n=20 -K=10 > %i
gen/gen_odd -n=19 > %i
gen/gen_odd -n=20 > %i
# ST: 45
# n^5
gen/gen_simple -n=39 -K=14 > %i
gen/gen_simple -n=39 -K=15 > %i
gen/gen_simple -n=40 -K=14 15 > %i  # leverage rounding v2
gen/gen_simple -n=40 -K=15 > %i
gen/gen_wnx -n=40 -K=10 -wn=-2 > %i
gen/gen_simple -n=28 -K=12 15 > %i  # leverage rounding v1
gen/gen_simple -n=40 -K=32 3 > %i  # leverage rounding v1
gen/gen_prefix -n=39 -K=19 > %i
gen/gen_prefix -n=40 -K=20 > %i
gen/gen_odd -n=39 > %i
gen/gen_odd -n=40 > %i
# ST: 15
# n^4
gen/gen_simple -n=89 -K=15 > %i
gen/gen_simple -n=89 -K=16 > %i
gen/gen_simple -n=90 -K=62 > %i
gen/gen_simple -n=90 -K=63 > %i
gen/gen_wnx -n=90 -K=40 -wn=-2 > %i
gen/gen_wnx -n=89 -K=65 -wn=2 > %i
gen/gen_unbalanced -n=89 -W=1500 -p=10 > %i
gen/gen_prefix -n=89 -K=46 > %i
gen/gen_prefix -n=90 -K=42 > %i
gen/gen_odd -n=89 > %i
gen/gen_odd -n=90 > %i